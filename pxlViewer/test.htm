<!DOCTYPE >
<html lang="en">
<head>

<script>
	// Don't worry too much about this top part, no global variables are used in the circle/line drawing script
	// This is just prep for this test page
	var mouseX=0;
	var mouseY=500;
	var sW=window.innerWidth;
	var sH=window.innerHeight;
	var click=0;
	var lines=new Array();
	var IE = document.all?true:false;
	document.onmousemove = function(e) {getMouseXY(e);};
	document.onmousedown = function(e) {click=1;drawDot();};
	document.onmouseup = function(e) {drawDot();click=0;lines=new Array();};
	window.onresize=function(event){init();};
	
	function init(){ // Set canvas widht and height
		sW=window.innerWidth;
		sH=window.innerHeight;
		canvas=document.getElementById("geoDrawTest");
		canvas.setAttribute("width", sW);
		canvas.setAttribute("height", sH);
	}
	// Just to get the mouse for this test
	function getMouseXY(e) {
		mouseX = IE?e.clientX:e.pageX;
		mouseY = IE?e.clientY:e.pageY;
		if(click==1){
			lines=lines.concat([mouseX, mouseY]);
			drawLine();
		}
	}
	
	////////////////////////////////////////////////////////////////
	////////////////////////////////////////////////////////////////
	
	function drawDot(){ // Draw a circle
		// Draw solid shading
		//drawGeo("geoDrawTest",[mouseX,mouseY],0,10,[0,0,255],1,1);
		
		// Draw a circle fading out alpha at edges
		drawGeo("geoDrawTest",[mouseX,mouseY],1,10,[0,0,255],1,1);
		
		// Draw a circle fading into solid alpha at edges
		//drawGeo("geoDrawTest",[mouseX,mouseY],2,10,[0,0,255],1,1);
		return true;
	}
	function drawLine(){ // Draw an array of points; [x1,y1, x2,y2, x3,y3, ... xn,yn]
		drawGeo("geoDrawTest",lines,4,10,[0,0,255],1,0);
		return true;
	}
	
	// canvas - Your canvas' id
	// loc - Array of points; [x1,y1, x2,y2, x3,y3, ... xn,yn]
	// eCount - Edge count, should be changed different, 0,1,2 are circle alpha fill values; 3,4+ is line creation
	//    For eCount, I'll update this usage to be more logical in the future
	//    Since I need to decare what type of line is being made, this made things complicated
	//    I'm probably going to split this function in 2, its just been easier for me as 1, but bulkier
	// size - Size of line / circle diameter
	// color - [R,G,B]; [0-255, 0-255, 0-255]
	// filled - outlined or filled geometry
	//drawGeo("geoDrawTest",[100,100],0,10,[0,0,255],1,1);
	function drawGeo(canvas,loc,eCount,size,color,alpha,filled){
		var comp=0;
		var flip=0;
		var x=loc[0];
		var y=loc[1];
		var R=color[0];
		var G=color[1];
		var B=color[2];
		hex="rgb("+Math.floor(R)+","+Math.floor(G)+","+Math.floor(B)+")"; // Prep for coloring solid geometry
		var csW=document.getElementById(canvas).offsetWidth;
		var csH=document.getElementById(canvas).offsetHeight;
		
		docCanvas=document.getElementById(canvas);
		draw=docCanvas.getContext('2d');
		var runCount=1;
		var flippers=[1,1];
		draw.globalAlpha=alpha;
		draw.beginPath();
		draw.lineWidth=Math.max(1,filled);
		if(filled==1){
			draw.fillStyle=hex;
		}else{
			draw.strokeStyle=hex;
		}
		if(eCount<=2){ // Draw a circle
			if(eCount==1){ // Draw a circle fading out
				var grad=draw.createRadialGradient(x,y,1,x,y,size/2);
				grad.addColorStop(0,'rgba('+Math.floor(color[0])+','+Math.floor(color[1])+','+Math.floor(color[2])+',1)');
				if(color.length>4){
					grad.addColorStop(1,'rgba('+Math.floor(color[3])+','+Math.floor(color[4])+','+Math.floor(color[5])+',0)');
				}else{
					grad.addColorStop(1,'rgba('+Math.floor(color[0])+','+Math.floor(color[1])+','+Math.floor(color[2])+',0)');
				}
				draw.fillStyle=grad;
			}else if(eCount==2){ // Draw a circle fading in
				var grad=draw.createRadialGradient(x,y,1,x,y,size/2);
				grad.addColorStop(0,'rgba('+Math.floor(color[0])+','+Math.floor(color[1])+','+Math.floor(color[2])+',0)');
				if(color.length>4){
					grad.addColorStop(1,'rgba('+Math.floor(color[3])+','+Math.floor(color[4])+','+Math.floor(color[5])+',1)');
				}else{
					grad.addColorStop(1,'rgba('+Math.floor(color[0])+','+Math.floor(color[1])+','+Math.floor(color[2])+',1)');
				}
				draw.fillStyle=grad;
			}
			draw.arc(x,y,size/2,0,Math.PI*2); // Draw circle
		}else{ // Draw lines
			if(loc.length>2){ // Make sure its not a single point
				if(eCount==3){ // Draw a linear curve
					draw.moveTo(x,y);
					for(var v=2; v<loc.length; v+=2){
						draw.lineTo(loc[v],loc[v+1]);
					}
					draw.lineJoin = 'round';
					if(size==1 && filled!=-1){
						draw.closePath();
					}else{
						draw.lineJoin = 'miter';
					}
				}else{ // Draw a quadratic curve
					draw.lineJoin = 'round';
					draw.moveTo(x,y);
					for(var v=2; v<loc.length; v+=4){
						draw.quadraticCurveTo(loc[v],loc[v+1], loc[v+2],loc[v+3]);
					}
					if(size==1){
						draw.quadraticCurveTo(loc[loc.length-2],loc[loc.length-1], loc[0],loc[1]);
					}
					if(size==1 && filled!=-1){
						draw.closePath();
					}else{
						draw.lineJoin = 'miter';
					}
				}
			}
		}
		if(filled==1){ // Fill object
			draw.fill();
		}else{ // Stroke object
			draw.stroke();
		}
	}
</script>
</head>
<body onLoad="init();";>
	<canvas id="geoDrawTest" style="position:absolute; top:0px; left:0px;"></canvas>
</body>
</html>
